[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "test-project"
version = "0.1.0"
description = "Production-ready MLOps template for specialized ML systems"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
dependencies = [ "click>=8.1.3", "rich>=13.5.2", "typer[all]>=0.9.0", "mkdocs>=1.5.2", "mkdocs-material>=9.2.8", "mkdocstrings[python]>=0.25.1", "pymdown-extensions>=10.2.1", "fastapi>=0.110.0", "uvicorn[standard]>=0.30.0", "pydantic>=2.5.0", "pydantic-settings>=2.1.0", "hydra-core>=1.3.2", "httpx>=0.27.0", "jinja2>=3.1.2", "pyyaml>=6.0", "joblib>=1.3.2", "numpy>=1.26.4", "scikit-learn>=1.5.0", "matplotlib>=3.9.0", "polars>=1.30.0", "asgi-lifespan>=2.1.0",]
[[project.authors]]
name = "MLX Team"
email = "team@mlx.dev"

[project.optional-dependencies]
dev = [ "pytest>=8.1.1", "pytest-cov>=5.0.0", "pytest-asyncio>=0.23.7", "ruff>=0.3.2", "mypy>=1.8.0", "bandit[toml]>=1.7.8", "radon>=5.1.0", "nbdoc>=0.0.8", "pre-commit>=4.2.0"]

[project.scripts]
mlx-foundation = "analysis_template.cli_template:app"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
exclude = [ "build/", "dist/",]

[tool.bandit]
exclude_dirs = [ "tests", "build", "dist",]
skips = [ "B101", "B601",]

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "B", "C4", "UP",]
ignore = [ "E501", "B008", "C901",]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
addopts = [ "--strict-markers", "--strict-config", "--verbose",]

[tool.ruff.lint.per-file-ignores]
"tests/conftest.py" = [ "E402",]
"__init__.py" = [ "F401",]

[tool.ruff.lint.isort]
known-first-party = [ "test_project",]

[tool.hatch.build.targets.wheel]
packages = [ "src",]
