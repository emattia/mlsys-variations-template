---
description: 
globs: 
alwaysApply: true
---
# MLX Foundation - Auto-generated Cursor Rules

## Project Structure (Preserved from Original)
This is an MLX Foundation project using projen for configuration management while maintaining the original repository structure.

### Core Directories (Existing Structure Maintained)
- `src/api/`: FastAPI application components  
- `src/config/`: Configuration management
- `src/plugins/`: Plugin architecture and registry
- `src/cli/`: Command-line interface
- `src/utils/`: Utility modules
- `src/models/`: Model definitions
- `src/data/`: Data processing modules
- `tests/`: Multi-layered testing (unit/integration/contracts)
- `conf/`: Hydra configuration files
- `docs/`: Comprehensive documentation
- `scripts/`: Development and automation scripts
- `tools/`: Development tools and utilities

### Package Management
- **Primary**: UV (not Poetry) - extremely fast Python package installer
- **Lock File**: `uv.lock` contains exact dependency versions
- **Requirements**: Generated by projen but compatible with existing UV workflow

### MLX Components (Extracted from Existing Structure)
- api-serving: Mapped from src/api_serving
- config-management: Mapped from src/config_management
- plugin-registry: Mapped from src/plugin_registry

### Development Patterns
- Use `projen` for all project configuration (preserves existing structure)
- Components are AI-enhanced with compatibility prediction
- Tests use smart selection for efficiency
- Configuration is hierarchical with Hydra + Pydantic (existing pattern)
- UV package management for all dependencies

### Common Commands (Preserved & Enhanced)
- `projen` - Synthesize project configuration
- `projen test:smart` - Run AI-selected tests from existing test suite
- `projen mlx:status` - Check project health 
- `projen api:dev` - Start existing FastAPI development server
- `make test` - Use existing Makefile (preserved)
- `uv pip install package` - Add dependencies with UV

### Existing Tooling Integration
- Makefile: Preserved existing tasks, enhanced with projen
- Docker: Existing Dockerfile and docker-compose.yml maintained
- CI/CD: GitHub Actions workflows preserved
- Pre-commit: Existing .pre-commit-config.yaml maintained
- MkDocs: Existing documentation system enhanced
